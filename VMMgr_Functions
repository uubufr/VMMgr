#! /bin/bash
#
# script name: VMMgr_Functions
# autor: Sylvain Girod ( uubu at gmx dot fr )
# version: 0.04
# description: All usefull functions
#
# Functions:



## TODO: Create tapup and links (using brctl, ovs-brctl or nmcli)
## Créer des units systemd




# Function: Check_System
# Description: Check system requirements
# Args: no args
# Steps:
#   1: Check module vhost-net
#   2: Check perms on /dev/net/tun, /dev/vhost-net and /dev/kvm
#   3: Set cap_net_admin on qemu-system_x86_64
function Check_System() {
    if [ "$(sudo modinfo vhost-net -F intree)" != "Y" ]; then
        sudo modprobe vhost vhost-net
    fi
    
    ls -l /dev/net/tun | cut -d\  -f1 | grep 'crw-rw-rw-' > /dev/null
    if [ $? -ne 0 ]; then
        sudo chmod 0666 /dev/net/tun
    fi

    ls -l /dev/vhost-net | cut -d\  -f1 | grep 'crw-rw-rw-' > /dev/null
    if [ $? -ne 0 ]; then
        sudo chmod 0666 /dev/vhost-net
    fi

    ls -l /dev/kvm | cut -d\  -f1 | grep 'crw-rw-rw-' > /dev/null
    if [ $? -ne 0 ]; then
        sudo chmod 0666 /dev/kvm
    fi

    sudo getcap /usr/bin/qemu-system-x86_64 | grep cap_net_admin+ep > /dev/null
    if [ $? -ne 0 ]; then
        sudo setcap cap_net_admin+ep /usr/bin/qemu-system-x86_64
    fi
    
    # On a besoin de voir comment faire dans sudo pour que ça fonctionne
    #if [ $(cat /proc/sys/net/ipv4/ip_forward) -eq 0 ]; then
        #sudo echo 1 > /proc/sys/net/ipv4/ip_forward
    #fi
    
    modinfo openvswitch 2>/dev/null 1>/dev/null
    if [ $? -eq 0 ]; then
        sudo modprobe openvswitch
        [ -d /var/run/openvswitch ] || sudo mkdir /var/run/openvswitch
}

# Function: Set_Bridge_Brctl
# Description: Set bridges using brctl
# Args:
#     $1: bridge name
function Set_Bridge_Brctl() {
    ip address show $1 2> /dev/null 1> /dev/null
    if [ $? -ne 0 ]; then
        sudo ip link add $1 type bridge
        sudo ip link set dev $1 up
    fi
}

# function: Set_Bridge_Ovs
# Description: Create bridge using openvswitch
# Args:
#    $1: Bridge name
function Set_Bridge_Ovs() {
 if [ "$(sudo ovs-vsctl list-br | grep $1)" == "" ]; then
  sudo ovs-vsctl add-br $1
  sleep 0.1
  sudo ip link set dev $1 up
 fi
}

# function: Set_Bridge_Nmcli
# Description: create bridge using nmcli
# Args:
#    $1: Bridge name
function Set_Bridge_Nmcli() {
 (nmcli dev show swvpl-main 2>&1 > /dev/null
 if [ $? -ne 0 ]; then
  nmcli dev con add save yes type bridge ifname $1
  nmcli con mod bridge-$1 connection.id $1
  nmcli dev set $1 autoconnect yes managed yes 
  nmcli dev connect $1
  nmcli dev reapply $1
}

